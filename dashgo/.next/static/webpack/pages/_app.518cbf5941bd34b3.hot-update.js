/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./node_modules/@tanstack/react-query/build/umd/index.production.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/umd/index.production.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * react-query\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n!function(t,e){ true?e(exports,__webpack_require__(/*! react */ \"./node_modules/react/index.js\"),__webpack_require__(/*! use-sync-external-store/shim */ \"./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/shim/index.js\")):0}(this,(function(t,e,s){\"use strict\";function r(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if(\"default\"!==s){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}var i=r(e);\n/**\n   * query-core\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */class n{constructor(){this.listeners=[],this.subscribe=this.subscribe.bind(this)}subscribe(t){return this.listeners.push(t),this.onSubscribe(),()=>{this.listeners=this.listeners.filter((e=>e!==t)),this.onUnsubscribe()}}hasListeners(){return this.listeners.length>0}onSubscribe(){}onUnsubscribe(){}}const a=\"undefined\"==typeof window;function o(){}function u(t){return\"number\"==typeof t&&t>=0&&t!==1/0}function c(t,e){return t.filter((t=>-1===e.indexOf(t)))}function h(t,e){return Math.max(t+(e||0)-Date.now(),0)}function l(t,e,s){return S(t)?\"function\"==typeof e?{...s,queryKey:t,queryFn:e}:{...e,queryKey:t}:t}function d(t,e,s){return S(t)?\"function\"==typeof e?{...s,mutationKey:t,mutationFn:e}:{...e,mutationKey:t}:\"function\"==typeof t?{...e,mutationFn:t}:{...t}}function f(t,e,s){return S(t)?[{...e,queryKey:t},s]:[t||{},e]}function p(t,e,s){return S(t)?[{...e,mutationKey:t},s]:[t||{},e]}function y(t,e){const{type:s=\"all\",exact:r,fetchStatus:i,predicate:n,queryKey:a,stale:o}=t;if(S(a))if(r){if(e.queryHash!==m(a,e.options))return!1}else if(!g(e.queryKey,a))return!1;if(\"all\"!==s){const t=e.isActive();if(\"active\"===s&&!t)return!1;if(\"inactive\"===s&&t)return!1}return(\"boolean\"!=typeof o||e.isStale()===o)&&((void 0===i||i===e.state.fetchStatus)&&!(n&&!n(e)))}function v(t,e){const{exact:s,fetching:r,predicate:i,mutationKey:n}=t;if(S(n)){if(!e.options.mutationKey)return!1;if(s){if(b(e.options.mutationKey)!==b(n))return!1}else if(!g(e.options.mutationKey,n))return!1}return(\"boolean\"!=typeof r||\"loading\"===e.state.status===r)&&!(i&&!i(e))}function m(t,e){return((null==e?void 0:e.queryKeyHashFn)||b)(t)}function b(t){return JSON.stringify(t,((t,e)=>q(e)?Object.keys(e).sort().reduce(((t,s)=>(t[s]=e[s],t)),{}):e))}function g(t,e){return O(t,e)}function O(t,e){return t===e||typeof t==typeof e&&(!(!t||!e||\"object\"!=typeof t||\"object\"!=typeof e)&&!Object.keys(e).some((s=>!O(t[s],e[s]))))}function C(t,e){if(t===e)return t;const s=R(t)&&R(e);if(s||q(t)&&q(e)){const r=s?t.length:Object.keys(t).length,i=s?e:Object.keys(e),n=i.length,a=s?[]:{};let o=0;for(let r=0;r<n;r++){const n=s?r:i[r];a[n]=C(t[n],e[n]),a[n]===t[n]&&o++}return r===n&&o===r?t:a}return e}function R(t){return Array.isArray(t)&&t.length===Object.keys(t).length}function q(t){if(!P(t))return!1;const e=t.constructor;if(void 0===e)return!0;const s=e.prototype;return!!P(s)&&!!s.hasOwnProperty(\"isPrototypeOf\")}function P(t){return\"[object Object]\"===Object.prototype.toString.call(t)}function S(t){return Array.isArray(t)}function Q(t){return new Promise((e=>{setTimeout(e,t)}))}function E(t){Q(0).then(t)}function x(t,e,s){return null!=s.isDataEqual&&s.isDataEqual(t,e)?t:!1!==s.structuralSharing?C(t,e):e}const M=new class extends n{constructor(){super(),this.setup=t=>{if(!a&&window.addEventListener){const e=()=>t();return window.addEventListener(\"visibilitychange\",e,!1),window.addEventListener(\"focus\",e,!1),()=>{window.removeEventListener(\"visibilitychange\",e),window.removeEventListener(\"focus\",e)}}}}onSubscribe(){this.cleanup||this.setEventListener(this.setup)}onUnsubscribe(){var t;this.hasListeners()||(null==(t=this.cleanup)||t.call(this),this.cleanup=void 0)}setEventListener(t){var e;this.setup=t,null==(e=this.cleanup)||e.call(this),this.cleanup=t((t=>{\"boolean\"==typeof t?this.setFocused(t):this.onFocus()}))}setFocused(t){this.focused=t,t&&this.onFocus()}onFocus(){this.listeners.forEach((t=>{t()}))}isFocused(){return\"boolean\"==typeof this.focused?this.focused:\"undefined\"==typeof document||[void 0,\"visible\",\"prerender\"].includes(document.visibilityState)}};const w=new class extends n{constructor(){super(),this.setup=t=>{if(!a&&window.addEventListener){const e=()=>t();return window.addEventListener(\"online\",e,!1),window.addEventListener(\"offline\",e,!1),()=>{window.removeEventListener(\"online\",e),window.removeEventListener(\"offline\",e)}}}}onSubscribe(){this.cleanup||this.setEventListener(this.setup)}onUnsubscribe(){var t;this.hasListeners()||(null==(t=this.cleanup)||t.call(this),this.cleanup=void 0)}setEventListener(t){var e;this.setup=t,null==(e=this.cleanup)||e.call(this),this.cleanup=t((t=>{\"boolean\"==typeof t?this.setOnline(t):this.onOnline()}))}setOnline(t){this.online=t,t&&this.onOnline()}onOnline(){this.listeners.forEach((t=>{t()}))}isOnline(){return\"boolean\"==typeof this.online?this.online:\"undefined\"==typeof navigator||void 0===navigator.onLine||navigator.onLine}};function F(t){return Math.min(1e3*2**t,3e4)}function A(t){return\"online\"!==(null!=t?t:\"online\")||w.isOnline()}class D{constructor(t){this.revert=null==t?void 0:t.revert,this.silent=null==t?void 0:t.silent}}function I(t){return t instanceof D}function U(t){let e,s,r,i=!1,n=0,a=!1;const o=new Promise(((t,e)=>{s=t,r=e})),u=()=>!M.isFocused()||\"always\"!==t.networkMode&&!w.isOnline(),c=r=>{a||(a=!0,null==t.onSuccess||t.onSuccess(r),null==e||e(),s(r))},h=s=>{a||(a=!0,null==t.onError||t.onError(s),null==e||e(),r(s))},l=()=>new Promise((s=>{e=t=>{if(a||!u())return s(t)},null==t.onPause||t.onPause()})).then((()=>{e=void 0,a||null==t.onContinue||t.onContinue()})),d=()=>{if(a)return;let e;try{e=t.fn()}catch(t){e=Promise.reject(t)}Promise.resolve(e).then(c).catch((e=>{var s,r;if(a)return;const o=null!=(s=t.retry)?s:3,c=null!=(r=t.retryDelay)?r:F,f=\"function\"==typeof c?c(n,e):c,p=!0===o||\"number\"==typeof o&&n<o||\"function\"==typeof o&&o(n,e);!i&&p?(n++,null==t.onFail||t.onFail(n,e),Q(f).then((()=>{if(u())return l()})).then((()=>{i?h(e):d()}))):h(e)}))};return A(t.networkMode)?d():l().then(d),{promise:o,cancel:e=>{a||(h(new D(e)),null==t.abort||t.abort())},continue:()=>{null==e||e()},cancelRetry:()=>{i=!0},continueRetry:()=>{i=!1}}}const T=console;const K=function(){let t=[],e=0,s=t=>{t()},r=t=>{t()};const i=r=>{e?t.push(r):E((()=>{s(r)}))},n=()=>{const e=t;t=[],e.length&&E((()=>{r((()=>{e.forEach((t=>{s(t)}))}))}))};return{batch:t=>{let s;e++;try{s=t()}finally{e--,e||n()}return s},batchCalls:t=>(...e)=>{i((()=>{t(...e)}))},schedule:i,setNotifyFunction:t=>{s=t},setBatchNotifyFunction:t=>{r=t}}}();class k{destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),u(this.cacheTime)&&(this.gcTimeout=setTimeout((()=>{this.optionalRemove()}),this.cacheTime))}updateCacheTime(t){this.cacheTime=Math.max(this.cacheTime||0,null!=t?t:a?1/0:3e5)}clearGcTimeout(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)}}class L extends k{constructor(t){super(),this.abortSignalConsumed=!1,this.defaultOptions=t.defaultOptions,this.setOptions(t.options),this.observers=[],this.cache=t.cache,this.logger=t.logger||T,this.queryKey=t.queryKey,this.queryHash=t.queryHash,this.initialState=t.state||function(t){const e=\"function\"==typeof t.initialData?t.initialData():t.initialData,s=void 0!==t.initialData?\"function\"==typeof t.initialDataUpdatedAt?t.initialDataUpdatedAt():t.initialDataUpdatedAt:0,r=void 0!==e;return{data:e,dataUpdateCount:0,dataUpdatedAt:r?null!=s?s:Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchMeta:null,isInvalidated:!1,status:r?\"success\":\"loading\",fetchStatus:\"idle\"}}(this.options),this.state=this.initialState,this.meta=t.meta}setOptions(t){this.options={...this.defaultOptions,...t},this.meta=null==t?void 0:t.meta,this.updateCacheTime(this.options.cacheTime)}optionalRemove(){this.observers.length||\"idle\"!==this.state.fetchStatus||this.cache.remove(this)}setData(t,e){const s=x(this.state.data,t,this.options);return this.dispatch({data:s,type:\"success\",dataUpdatedAt:null==e?void 0:e.updatedAt,manual:null==e?void 0:e.manual}),s}setState(t,e){this.dispatch({type:\"setState\",state:t,setStateOptions:e})}cancel(t){var e;const s=this.promise;return null==(e=this.retryer)||e.cancel(t),s?s.then(o).catch(o):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(this.initialState)}isActive(){return this.observers.some((t=>!1!==t.options.enabled))}isDisabled(){return this.getObserversCount()>0&&!this.isActive()}isStale(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some((t=>t.getCurrentResult().isStale))}isStaleByTime(t=0){return this.state.isInvalidated||!this.state.dataUpdatedAt||!h(this.state.dataUpdatedAt,t)}onFocus(){var t;const e=this.observers.find((t=>t.shouldFetchOnWindowFocus()));e&&e.refetch({cancelRefetch:!1}),null==(t=this.retryer)||t.continue()}onOnline(){var t;const e=this.observers.find((t=>t.shouldFetchOnReconnect()));e&&e.refetch({cancelRefetch:!1}),null==(t=this.retryer)||t.continue()}addObserver(t){-1===this.observers.indexOf(t)&&(this.observers.push(t),this.clearGcTimeout(),this.cache.notify({type:\"observerAdded\",query:this,observer:t}))}removeObserver(t){-1!==this.observers.indexOf(t)&&(this.observers=this.observers.filter((e=>e!==t)),this.observers.length||(this.retryer&&(this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.scheduleGc()),this.cache.notify({type:\"observerRemoved\",query:this,observer:t}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||this.dispatch({type:\"invalidate\"})}fetch(t,e){var s,r;if(\"idle\"!==this.state.fetchStatus)if(this.state.dataUpdatedAt&&null!=e&&e.cancelRefetch)this.cancel({silent:!0});else if(this.promise){var i;return null==(i=this.retryer)||i.continueRetry(),this.promise}if(t&&this.setOptions(t),!this.options.queryFn){const t=this.observers.find((t=>t.options.queryFn));t&&this.setOptions(t.options)}Array.isArray(this.options.queryKey);const n=function(){if(\"function\"==typeof AbortController)return new AbortController}(),a={queryKey:this.queryKey,pageParam:void 0,meta:this.meta},o=t=>{Object.defineProperty(t,\"signal\",{enumerable:!0,get:()=>{if(n)return this.abortSignalConsumed=!0,n.signal}})};o(a);const u={fetchOptions:e,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:()=>this.options.queryFn?(this.abortSignalConsumed=!1,this.options.queryFn(a)):Promise.reject(\"Missing queryFn\"),meta:this.meta};var c;(o(u),null==(s=this.options.behavior)||s.onFetch(u),this.revertState=this.state,\"idle\"===this.state.fetchStatus||this.state.fetchMeta!==(null==(r=u.fetchOptions)?void 0:r.meta))&&this.dispatch({type:\"fetch\",meta:null==(c=u.fetchOptions)?void 0:c.meta});const h=t=>{var e,s;(I(t)&&t.silent||this.dispatch({type:\"error\",error:t}),I(t))||(null==(e=(s=this.cache.config).onError)||e.call(s,t,this));this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1};return this.retryer=U({fn:u.fetchFn,abort:null==n?void 0:n.abort.bind(n),onSuccess:t=>{var e,s;void 0!==t?(this.setData(t),null==(e=(s=this.cache.config).onSuccess)||e.call(s,t,this),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1):h(new Error(\"Query data cannot be undefined\"))},onError:h,onFail:()=>{this.dispatch({type:\"failed\"})},onPause:()=>{this.dispatch({type:\"pause\"})},onContinue:()=>{this.dispatch({type:\"continue\"})},retry:u.options.retry,retryDelay:u.options.retryDelay,networkMode:u.options.networkMode}),this.promise=this.retryer.promise,this.promise}dispatch(t){this.state=(e=>{var s,r;switch(t.type){case\"failed\":return{...e,fetchFailureCount:e.fetchFailureCount+1};case\"pause\":return{...e,fetchStatus:\"paused\"};case\"continue\":return{...e,fetchStatus:\"fetching\"};case\"fetch\":return{...e,fetchFailureCount:0,fetchMeta:null!=(s=t.meta)?s:null,fetchStatus:A(this.options.networkMode)?\"fetching\":\"paused\",...!e.dataUpdatedAt&&{error:null,status:\"loading\"}};case\"success\":return{...e,data:t.data,dataUpdateCount:e.dataUpdateCount+1,dataUpdatedAt:null!=(r=t.dataUpdatedAt)?r:Date.now(),error:null,isInvalidated:!1,status:\"success\",...!t.manual&&{fetchStatus:\"idle\",fetchFailureCount:0}};case\"error\":const i=t.error;return I(i)&&i.revert&&this.revertState?{...this.revertState}:{...e,error:i,errorUpdateCount:e.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:e.fetchFailureCount+1,fetchStatus:\"idle\",status:\"error\"};case\"invalidate\":return{...e,isInvalidated:!0};case\"setState\":return{...e,...t.state}}})(this.state),K.batch((()=>{this.observers.forEach((e=>{e.onQueryUpdate(t)})),this.cache.notify({query:this,type:\"updated\",action:t})}))}}class j extends n{constructor(t){super(),this.config=t||{},this.queries=[],this.queriesMap={}}build(t,e,s){var r;const i=e.queryKey,n=null!=(r=e.queryHash)?r:m(i,e);let a=this.get(n);return a||(a=new L({cache:this,logger:t.getLogger(),queryKey:i,queryHash:n,options:t.defaultQueryOptions(e),state:s,defaultOptions:t.getQueryDefaults(i),meta:e.meta}),this.add(a)),a}add(t){this.queriesMap[t.queryHash]||(this.queriesMap[t.queryHash]=t,this.queries.push(t),this.notify({type:\"added\",query:t}))}remove(t){const e=this.queriesMap[t.queryHash];e&&(t.destroy(),this.queries=this.queries.filter((e=>e!==t)),e===t&&delete this.queriesMap[t.queryHash],this.notify({type:\"removed\",query:t}))}clear(){K.batch((()=>{this.queries.forEach((t=>{this.remove(t)}))}))}get(t){return this.queriesMap[t]}getAll(){return this.queries}find(t,e){const[s]=f(t,e);return void 0===s.exact&&(s.exact=!0),this.queries.find((t=>y(s,t)))}findAll(t,e){const[s]=f(t,e);return Object.keys(s).length>0?this.queries.filter((t=>y(s,t))):this.queries}notify(t){K.batch((()=>{this.listeners.forEach((e=>{e(t)}))}))}onFocus(){K.batch((()=>{this.queries.forEach((t=>{t.onFocus()}))}))}onOnline(){K.batch((()=>{this.queries.forEach((t=>{t.onOnline()}))}))}}class H extends k{constructor(t){super(),this.options={...t.defaultOptions,...t.options},this.mutationId=t.mutationId,this.mutationCache=t.mutationCache,this.logger=t.logger||T,this.observers=[],this.state=t.state||N(),this.meta=t.meta,this.updateCacheTime(this.options.cacheTime),this.scheduleGc()}setState(t){this.dispatch({type:\"setState\",state:t})}addObserver(t){-1===this.observers.indexOf(t)&&(this.observers.push(t),this.clearGcTimeout(),this.mutationCache.notify({type:\"observerAdded\",mutation:this,observer:t}))}removeObserver(t){this.observers=this.observers.filter((e=>e!==t)),this.scheduleGc(),this.mutationCache.notify({type:\"observerRemoved\",mutation:this,observer:t})}optionalRemove(){this.observers.length||(\"loading\"===this.state.status?this.scheduleGc():this.mutationCache.remove(this))}continue(){return this.retryer?(this.retryer.continue(),this.retryer.promise):this.execute()}async execute(){const t=()=>{var t;return this.retryer=U({fn:()=>this.options.mutationFn?this.options.mutationFn(this.state.variables):Promise.reject(\"No mutationFn found\"),onFail:()=>{this.dispatch({type:\"failed\"})},onPause:()=>{this.dispatch({type:\"pause\"})},onContinue:()=>{this.dispatch({type:\"continue\"})},retry:null!=(t=this.options.retry)?t:0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode}),this.retryer.promise},e=\"loading\"===this.state.status;try{var s,r,i,n,a,o;if(!e){var u,c,h,l;this.dispatch({type:\"loading\",variables:this.options.variables}),null==(u=(c=this.mutationCache.config).onMutate)||u.call(c,this.state.variables,this);const t=await(null==(h=(l=this.options).onMutate)?void 0:h.call(l,this.state.variables));t!==this.state.context&&this.dispatch({type:\"loading\",context:t,variables:this.state.variables})}const d=await t();return null==(s=(r=this.mutationCache.config).onSuccess)||s.call(r,d,this.state.variables,this.state.context,this),await(null==(i=(n=this.options).onSuccess)?void 0:i.call(n,d,this.state.variables,this.state.context)),await(null==(a=(o=this.options).onSettled)?void 0:a.call(o,d,null,this.state.variables,this.state.context)),this.dispatch({type:\"success\",data:d}),d}catch(t){try{var d,f,p,y,v,m;throw null==(d=(f=this.mutationCache.config).onError)||d.call(f,t,this.state.variables,this.state.context,this),await(null==(p=(y=this.options).onError)?void 0:p.call(y,t,this.state.variables,this.state.context)),await(null==(v=(m=this.options).onSettled)?void 0:v.call(m,void 0,t,this.state.variables,this.state.context)),t}finally{this.dispatch({type:\"error\",error:t})}}}dispatch(t){this.state=(e=>{switch(t.type){case\"failed\":return{...e,failureCount:e.failureCount+1};case\"pause\":return{...e,isPaused:!0};case\"continue\":return{...e,isPaused:!1};case\"loading\":return{...e,context:t.context,data:void 0,error:null,isPaused:!A(this.options.networkMode),status:\"loading\",variables:t.variables};case\"success\":return{...e,data:t.data,error:null,status:\"success\",isPaused:!1};case\"error\":return{...e,data:void 0,error:t.error,failureCount:e.failureCount+1,isPaused:!1,status:\"error\"};case\"setState\":return{...e,...t.state}}})(this.state),K.batch((()=>{this.observers.forEach((e=>{e.onMutationUpdate(t)})),this.mutationCache.notify({mutation:this,type:\"updated\",action:t})}))}}function N(){return{context:void 0,data:void 0,error:null,failureCount:0,isPaused:!1,status:\"idle\",variables:void 0}}class B extends n{constructor(t){super(),this.config=t||{},this.mutations=[],this.mutationId=0}build(t,e,s){const r=new H({mutationCache:this,logger:t.getLogger(),mutationId:++this.mutationId,options:t.defaultMutationOptions(e),state:s,defaultOptions:e.mutationKey?t.getMutationDefaults(e.mutationKey):void 0,meta:e.meta});return this.add(r),r}add(t){this.mutations.push(t),this.notify({type:\"added\",mutation:t})}remove(t){this.mutations=this.mutations.filter((e=>e!==t)),this.notify({type:\"removed\",mutation:t})}clear(){K.batch((()=>{this.mutations.forEach((t=>{this.remove(t)}))}))}getAll(){return this.mutations}find(t){return void 0===t.exact&&(t.exact=!0),this.mutations.find((e=>v(t,e)))}findAll(t){return this.mutations.filter((e=>v(t,e)))}notify(t){K.batch((()=>{this.listeners.forEach((e=>{e(t)}))}))}resumePausedMutations(){const t=this.mutations.filter((t=>t.state.isPaused));return K.batch((()=>t.reduce(((t,e)=>t.then((()=>e.continue().catch(o)))),Promise.resolve())))}}function G(){return{onFetch:t=>{t.fetchFn=()=>{var e,s,r,i,n,a;const o=null==(e=t.fetchOptions)||null==(s=e.meta)?void 0:s.refetchPage,u=null==(r=t.fetchOptions)||null==(i=r.meta)?void 0:i.fetchMore,c=null==u?void 0:u.pageParam,h=\"forward\"===(null==u?void 0:u.direction),l=\"backward\"===(null==u?void 0:u.direction),d=(null==(n=t.state.data)?void 0:n.pages)||[],f=(null==(a=t.state.data)?void 0:a.pageParams)||[];let p=f,y=!1;const v=t.options.queryFn||(()=>Promise.reject(\"Missing queryFn\")),m=(t,e,s,r)=>(p=r?[e,...p]:[...p,e],r?[s,...t]:[...t,s]),b=(e,s,r,i)=>{if(y)return Promise.reject(\"Cancelled\");if(void 0===r&&!s&&e.length)return Promise.resolve(e);const n={queryKey:t.queryKey,pageParam:r,meta:t.meta};var a;a=n,Object.defineProperty(a,\"signal\",{enumerable:!0,get:()=>{var e,s;return null!=(e=t.signal)&&e.aborted?y=!0:null==(s=t.signal)||s.addEventListener(\"abort\",(()=>{y=!0})),t.signal}});const o=v(n);return Promise.resolve(o).then((t=>m(e,r,t,i)))};let g;if(d.length)if(h){const e=void 0!==c,s=e?c:_(t.options,d);g=b(d,e,s)}else if(l){const e=void 0!==c,s=e?c:W(t.options,d);g=b(d,e,s,!0)}else{p=[];const e=void 0===t.options.getNextPageParam;g=!o||!d[0]||o(d[0],0,d)?b([],e,f[0]):Promise.resolve(m([],f[0],d[0]));for(let s=1;s<d.length;s++)g=g.then((r=>{if(!o||!d[s]||o(d[s],s,d)){const i=e?f[s]:_(t.options,r);return b(r,e,i)}return Promise.resolve(m(r,f[s],d[s]))}))}else g=b([]);return g.then((t=>({pages:t,pageParams:p})))}}}}function _(t,e){return null==t.getNextPageParam?void 0:t.getNextPageParam(e[e.length-1],e)}function W(t,e){return null==t.getPreviousPageParam?void 0:t.getPreviousPageParam(e[0],e)}function z(t,e){if(t.getNextPageParam&&Array.isArray(e)){const s=_(t,e);return null!=s&&!1!==s}}function J(t,e){if(t.getPreviousPageParam&&Array.isArray(e)){const s=W(t,e);return null!=s&&!1!==s}}class V extends n{constructor(t,e){super(),this.client=t,this.options=e,this.trackedProps=new Set,this.selectError=null,this.bindMethods(),this.setOptions(e)}bindMethods(){this.remove=this.remove.bind(this),this.refetch=this.refetch.bind(this)}onSubscribe(){1===this.listeners.length&&(this.currentQuery.addObserver(this),X(this.currentQuery,this.options)&&this.executeFetch(),this.updateTimers())}onUnsubscribe(){this.listeners.length||this.destroy()}shouldFetchOnReconnect(){return Y(this.currentQuery,this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return Y(this.currentQuery,this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=[],this.clearStaleTimeout(),this.clearRefetchInterval(),this.currentQuery.removeObserver(this)}setOptions(t,e){const s=this.options,r=this.currentQuery;if(this.options=this.client.defaultQueryOptions(t),void 0!==this.options.enabled&&\"boolean\"!=typeof this.options.enabled)throw new Error(\"Expected enabled to be a boolean\");this.options.queryKey||(this.options.queryKey=s.queryKey),this.updateQuery();const i=this.hasListeners();i&&Z(this.currentQuery,r,this.options,s)&&this.executeFetch(),this.updateResult(e),!i||this.currentQuery===r&&this.options.enabled===s.enabled&&this.options.staleTime===s.staleTime||this.updateStaleTimeout();const n=this.computeRefetchInterval();!i||this.currentQuery===r&&this.options.enabled===s.enabled&&n===this.currentRefetchInterval||this.updateRefetchInterval(n)}getOptimisticResult(t){const e=this.client.getQueryCache().build(this.client,t);return this.createResult(e,t)}getCurrentResult(){return this.currentResult}trackResult(t){const e={};return Object.keys(t).forEach((s=>{Object.defineProperty(e,s,{configurable:!1,enumerable:!0,get:()=>(this.trackedProps.add(s),t[s])})})),e}getCurrentQuery(){return this.currentQuery}remove(){this.client.getQueryCache().remove(this.currentQuery)}refetch({refetchPage:t,...e}={}){return this.fetch({...e,meta:{refetchPage:t}})}fetchOptimistic(t){const e=this.client.defaultQueryOptions(t),s=this.client.getQueryCache().build(this.client,e);return s.isFetchingOptimistic=!0,s.fetch().then((()=>this.createResult(s,e)))}fetch(t){var e;return this.executeFetch({...t,cancelRefetch:null==(e=t.cancelRefetch)||e}).then((()=>(this.updateResult(),this.currentResult)))}executeFetch(t){this.updateQuery();let e=this.currentQuery.fetch(this.options,t);return null!=t&&t.throwOnError||(e=e.catch(o)),e}updateStaleTimeout(){if(this.clearStaleTimeout(),a||this.currentResult.isStale||!u(this.options.staleTime))return;const t=h(this.currentResult.dataUpdatedAt,this.options.staleTime)+1;this.staleTimeoutId=setTimeout((()=>{this.currentResult.isStale||this.updateResult()}),t)}computeRefetchInterval(){var t;return\"function\"==typeof this.options.refetchInterval?this.options.refetchInterval(this.currentResult.data,this.currentQuery):null!=(t=this.options.refetchInterval)&&t}updateRefetchInterval(t){this.clearRefetchInterval(),this.currentRefetchInterval=t,!a&&!1!==this.options.enabled&&u(this.currentRefetchInterval)&&0!==this.currentRefetchInterval&&(this.refetchIntervalId=setInterval((()=>{(this.options.refetchIntervalInBackground||M.isFocused())&&this.executeFetch()}),this.currentRefetchInterval))}updateTimers(){this.updateStaleTimeout(),this.updateRefetchInterval(this.computeRefetchInterval())}clearStaleTimeout(){this.staleTimeoutId&&(clearTimeout(this.staleTimeoutId),this.staleTimeoutId=void 0)}clearRefetchInterval(){this.refetchIntervalId&&(clearInterval(this.refetchIntervalId),this.refetchIntervalId=void 0)}createResult(t,e){const s=this.currentQuery,r=this.options,i=this.currentResult,n=this.currentResultState,a=this.currentResultOptions,o=t!==s,u=o?t.state:this.currentQueryInitialState,c=o?this.currentResult:this.previousQueryResult,{state:h}=t;let l,{dataUpdatedAt:d,error:f,errorUpdatedAt:p,fetchStatus:y,status:v}=h,m=!1,b=!1;if(e._optimisticResults){const i=this.hasListeners(),n=!i&&X(t,e),a=i&&Z(t,s,e,r);(n||a)&&(y=A(t.options.networkMode)?\"fetching\":\"paused\",d||(v=\"loading\")),\"isRestoring\"===e._optimisticResults&&(y=\"idle\")}if(e.keepPreviousData&&!h.dataUpdateCount&&null!=c&&c.isSuccess&&\"error\"!==v)l=c.data,d=c.dataUpdatedAt,v=c.status,m=!0;else if(e.select&&void 0!==h.data)if(i&&h.data===(null==n?void 0:n.data)&&e.select===this.selectFn)l=this.selectResult;else try{this.selectFn=e.select,l=e.select(h.data),l=x(null==i?void 0:i.data,l,e),this.selectResult=l,this.selectError=null}catch(t){this.selectError=t}else l=h.data;if(void 0!==e.placeholderData&&void 0===l&&\"loading\"===v){let t;if(null!=i&&i.isPlaceholderData&&e.placeholderData===(null==a?void 0:a.placeholderData))t=i.data;else if(t=\"function\"==typeof e.placeholderData?e.placeholderData():e.placeholderData,e.select&&void 0!==t)try{t=e.select(t),t=x(null==i?void 0:i.data,t,e),this.selectError=null}catch(t){this.selectError=t}void 0!==t&&(v=\"success\",l=t,b=!0)}this.selectError&&(f=this.selectError,l=this.selectResult,p=Date.now(),v=\"error\");const g=\"fetching\"===y;return{status:v,fetchStatus:y,isLoading:\"loading\"===v,isSuccess:\"success\"===v,isError:\"error\"===v,data:l,dataUpdatedAt:d,error:f,errorUpdatedAt:p,failureCount:h.fetchFailureCount,errorUpdateCount:h.errorUpdateCount,isFetched:h.dataUpdateCount>0||h.errorUpdateCount>0,isFetchedAfterMount:h.dataUpdateCount>u.dataUpdateCount||h.errorUpdateCount>u.errorUpdateCount,isFetching:g,isRefetching:g&&\"loading\"!==v,isLoadingError:\"error\"===v&&0===h.dataUpdatedAt,isPaused:\"paused\"===y,isPlaceholderData:b,isPreviousData:m,isRefetchError:\"error\"===v&&0!==h.dataUpdatedAt,isStale:$(t,e),refetch:this.refetch,remove:this.remove}}updateResult(t){const e=this.currentResult,s=this.createResult(this.currentQuery,this.options);if(this.currentResultState=this.currentQuery.state,this.currentResultOptions=this.options,function(t,e){if(t&&!e||e&&!t)return!1;for(const s in t)if(t[s]!==e[s])return!1;return!0}(s,e))return;this.currentResult=s;const r={cache:!0};!1!==(null==t?void 0:t.listeners)&&(()=>{if(!e)return!0;const{notifyOnChangeProps:t}=this.options;if(\"all\"===t||!t&&!this.trackedProps.size)return!0;const s=new Set(null!=t?t:this.trackedProps);return this.options.useErrorBoundary&&s.add(\"error\"),Object.keys(this.currentResult).some((t=>{const r=t;return this.currentResult[r]!==e[r]&&s.has(r)}))})()&&(r.listeners=!0),this.notify({...r,...t})}updateQuery(){const t=this.client.getQueryCache().build(this.client,this.options);if(t===this.currentQuery)return;const e=this.currentQuery;this.currentQuery=t,this.currentQueryInitialState=t.state,this.previousQueryResult=this.currentResult,this.hasListeners()&&(null==e||e.removeObserver(this),t.addObserver(this))}onQueryUpdate(t){const e={};\"success\"===t.type?e.onSuccess=!t.manual:\"error\"!==t.type||I(t.error)||(e.onError=!0),this.updateResult(e),this.hasListeners()&&this.updateTimers()}notify(t){K.batch((()=>{var e,s,r,i;if(t.onSuccess)null==(e=(s=this.options).onSuccess)||e.call(s,this.currentResult.data),null==(r=(i=this.options).onSettled)||r.call(i,this.currentResult.data,null);else if(t.onError){var n,a,o,u;null==(n=(a=this.options).onError)||n.call(a,this.currentResult.error),null==(o=(u=this.options).onSettled)||o.call(u,void 0,this.currentResult.error)}t.listeners&&this.listeners.forEach((t=>{t(this.currentResult)})),t.cache&&this.client.getQueryCache().notify({query:this.currentQuery,type:\"observerResultsUpdated\"})}))}}function X(t,e){return function(t,e){return!(!1===e.enabled||t.state.dataUpdatedAt||\"error\"===t.state.status&&!1===e.retryOnMount)}(t,e)||t.state.dataUpdatedAt>0&&Y(t,e,e.refetchOnMount)}function Y(t,e,s){if(!1!==e.enabled){const r=\"function\"==typeof s?s(t):s;return\"always\"===r||!1!==r&&$(t,e)}return!1}function Z(t,e,s,r){return!1!==s.enabled&&(t!==e||!1===r.enabled)&&(!s.suspense||\"error\"!==t.state.status)&&$(t,s)}function $(t,e){return t.isStaleByTime(e.staleTime)}class tt extends n{constructor(t,e){super(),this.client=t,this.queries=[],this.result=[],this.observers=[],this.observersMap={},e&&this.setQueries(e)}onSubscribe(){1===this.listeners.length&&this.observers.forEach((t=>{t.subscribe((e=>{this.onUpdate(t,e)}))}))}onUnsubscribe(){this.listeners.length||this.destroy()}destroy(){this.listeners=[],this.observers.forEach((t=>{t.destroy()}))}setQueries(t,e){this.queries=t,K.batch((()=>{const t=this.observers,s=this.findMatchingObservers(this.queries);s.forEach((t=>t.observer.setOptions(t.defaultedQueryOptions,e)));const r=s.map((t=>t.observer)),i=Object.fromEntries(r.map((t=>[t.options.queryHash,t]))),n=r.map((t=>t.getCurrentResult())),a=r.some(((e,s)=>e!==t[s]));(t.length!==r.length||a)&&(this.observers=r,this.observersMap=i,this.result=n,this.hasListeners()&&(c(t,r).forEach((t=>{t.destroy()})),c(r,t).forEach((t=>{t.subscribe((e=>{this.onUpdate(t,e)}))})),this.notify()))}))}getCurrentResult(){return this.result}getOptimisticResult(t){return this.findMatchingObservers(t).map((t=>t.observer.getOptimisticResult(t.defaultedQueryOptions)))}findMatchingObservers(t){const e=this.observers,s=t.map((t=>this.client.defaultQueryOptions(t))),r=s.flatMap((t=>{const s=e.find((e=>e.options.queryHash===t.queryHash));return null!=s?[{defaultedQueryOptions:t,observer:s}]:[]})),i=r.map((t=>t.defaultedQueryOptions.queryHash)),n=s.filter((t=>!i.includes(t.queryHash))),a=e.filter((t=>!r.some((e=>e.observer===t)))),o=t=>{const e=this.client.defaultQueryOptions(t),s=this.observersMap[e.queryHash];return null!=s?s:new V(this.client,e)},u=n.map(((t,e)=>{if(t.keepPreviousData){const s=a[e];if(void 0!==s)return{defaultedQueryOptions:t,observer:s}}return{defaultedQueryOptions:t,observer:o(t)}}));return r.concat(u).sort(((t,e)=>s.indexOf(t.defaultedQueryOptions)-s.indexOf(e.defaultedQueryOptions)))}onUpdate(t,e){const s=this.observers.indexOf(t);-1!==s&&(this.result=function(t,e,s){const r=t.slice(0);return r[e]=s,r}(this.result,s,e),this.notify())}notify(){K.batch((()=>{this.listeners.forEach((t=>{t(this.result)}))}))}}class et extends V{constructor(t,e){super(t,e)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(t,e){super.setOptions({...t,behavior:G()},e)}getOptimisticResult(t){return t.behavior=G(),super.getOptimisticResult(t)}fetchNextPage({pageParam:t,...e}={}){return this.fetch({...e,meta:{fetchMore:{direction:\"forward\",pageParam:t}}})}fetchPreviousPage({pageParam:t,...e}={}){return this.fetch({...e,meta:{fetchMore:{direction:\"backward\",pageParam:t}}})}createResult(t,e){var s,r,i,n,a,o;const{state:u}=t;return{...super.createResult(t,e),fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:z(e,null==(s=u.data)?void 0:s.pages),hasPreviousPage:J(e,null==(r=u.data)?void 0:r.pages),isFetchingNextPage:\"fetching\"===u.fetchStatus&&\"forward\"===(null==(i=u.fetchMeta)||null==(n=i.fetchMore)?void 0:n.direction),isFetchingPreviousPage:\"fetching\"===u.fetchStatus&&\"backward\"===(null==(a=u.fetchMeta)||null==(o=a.fetchMore)?void 0:o.direction)}}}class st extends n{constructor(t,e){super(),this.client=t,this.setOptions(e),this.bindMethods(),this.updateResult()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){this.options=this.client.defaultMutationOptions(t)}onUnsubscribe(){var t;this.listeners.length||(null==(t=this.currentMutation)||t.removeObserver(this))}onMutationUpdate(t){this.updateResult();const e={listeners:!0};\"success\"===t.type?e.onSuccess=!0:\"error\"===t.type&&(e.onError=!0),this.notify(e)}getCurrentResult(){return this.currentResult}reset(){this.currentMutation=void 0,this.updateResult(),this.notify({listeners:!0})}mutate(t,e){return this.mutateOptions=e,this.currentMutation&&this.currentMutation.removeObserver(this),this.currentMutation=this.client.getMutationCache().build(this.client,{...this.options,variables:void 0!==t?t:this.options.variables}),this.currentMutation.addObserver(this),this.currentMutation.execute()}updateResult(){const t=this.currentMutation?this.currentMutation.state:{context:void 0,data:void 0,error:null,failureCount:0,isPaused:!1,status:\"idle\",variables:void 0},e={...t,isLoading:\"loading\"===t.status,isSuccess:\"success\"===t.status,isError:\"error\"===t.status,isIdle:\"idle\"===t.status,mutate:this.mutate,reset:this.reset};this.currentResult=e}notify(t){K.batch((()=>{var e,s,r,i;if(this.mutateOptions)if(t.onSuccess)null==(e=(s=this.mutateOptions).onSuccess)||e.call(s,this.currentResult.data,this.currentResult.variables,this.currentResult.context),null==(r=(i=this.mutateOptions).onSettled)||r.call(i,this.currentResult.data,null,this.currentResult.variables,this.currentResult.context);else if(t.onError){var n,a,o,u;null==(n=(a=this.mutateOptions).onError)||n.call(a,this.currentResult.error,this.currentResult.variables,this.currentResult.context),null==(o=(u=this.mutateOptions).onSettled)||o.call(u,void 0,this.currentResult.error,this.currentResult.variables,this.currentResult.context)}t.listeners&&this.listeners.forEach((t=>{t(this.currentResult)}))}))}}function rt(t){return t.state.isPaused}function it(t){return\"success\"===t.state.status}function nt(t,e,s){if(\"object\"!=typeof e||null===e)return;const r=t.getMutationCache(),i=t.getQueryCache(),n=e.mutations||[],a=e.queries||[];n.forEach((e=>{var i;r.build(t,{...null==s||null==(i=s.defaultOptions)?void 0:i.mutations,mutationKey:e.mutationKey},e.state)})),a.forEach((e=>{var r;const n=i.get(e.queryHash);n?n.state.dataUpdatedAt<e.state.dataUpdatedAt&&n.setState(e.state):i.build(t,{...null==s||null==(r=s.defaultOptions)?void 0:r.queries,queryKey:e.queryKey,queryHash:e.queryHash},e.state)}))}const at=i.createContext(void 0),ot=i.createContext(!1);function ut(t,e){return t||(e&&\"undefined\"!=typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=at),window.ReactQueryClientContext):at)}const ct=({context:t}={})=>{const e=i.useContext(ut(t,i.useContext(ot)));if(!e)throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");return e},ht=i.createContext(!1),lt=()=>i.useContext(ht),dt=ht.Provider;function ft(){let t=!1;return{clearReset:()=>{t=!1},reset:()=>{t=!0},isReset:()=>t}}const pt=i.createContext(ft()),yt=()=>i.useContext(pt);function vt(t,e){return\"function\"==typeof t?t(...e):!!t}function mt(t,e){const r=ct({context:t.context}),n=lt(),a=yt(),o=r.defaultQueryOptions(t);o._optimisticResults=n?\"isRestoring\":\"optimistic\",o.onError&&(o.onError=K.batchCalls(o.onError)),o.onSuccess&&(o.onSuccess=K.batchCalls(o.onSuccess)),o.onSettled&&(o.onSettled=K.batchCalls(o.onSettled)),o.suspense&&\"number\"!=typeof o.staleTime&&(o.staleTime=1e3),(o.suspense||o.useErrorBoundary)&&(a.isReset()||(o.retryOnMount=!1));const[u]=i.useState((()=>new e(r,o))),c=u.getOptimisticResult(o);if(s.useSyncExternalStore(i.useCallback((t=>n?()=>{}:u.subscribe(K.batchCalls(t))),[u,n]),(()=>u.getCurrentResult()),(()=>u.getCurrentResult())),i.useEffect((()=>{a.clearReset()}),[a]),i.useEffect((()=>{u.setOptions(o,{listeners:!1})}),[o,u]),o.suspense&&c.isLoading&&c.isFetching&&!n)throw u.fetchOptimistic(o).then((({data:t})=>{null==o.onSuccess||o.onSuccess(t),null==o.onSettled||o.onSettled(t,null)})).catch((t=>{a.clearReset(),null==o.onError||o.onError(t),null==o.onSettled||o.onSettled(void 0,t)}));if(c.isError&&!a.isReset()&&!c.isFetching&&vt(o.useErrorBoundary,[c.error,u.getCurrentQuery()]))throw c.error;return o.notifyOnChangeProps?c:u.trackResult(c)}function bt(t,e={}){const s=ct({context:e.context}),r=i.useRef(e);r.current=e,i.useMemo((()=>{t&&nt(s,t,r.current)}),[s,t])}function gt(){}t.CancelledError=D,t.Hydrate=({children:t,options:e,state:s})=>(bt(s,e),t),t.InfiniteQueryObserver=et,t.IsRestoringProvider=dt,t.MutationCache=B,t.MutationObserver=st,t.QueriesObserver=tt,t.QueryCache=j,t.QueryClient=class{constructor(t={}){this.queryCache=t.queryCache||new j,this.mutationCache=t.mutationCache||new B,this.logger=t.logger||T,this.defaultOptions=t.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[]}mount(){this.unsubscribeFocus=M.subscribe((()=>{M.isFocused()&&(this.resumePausedMutations(),this.queryCache.onFocus())})),this.unsubscribeOnline=w.subscribe((()=>{w.isOnline()&&(this.resumePausedMutations(),this.queryCache.onOnline())}))}unmount(){var t,e;null==(t=this.unsubscribeFocus)||t.call(this),null==(e=this.unsubscribeOnline)||e.call(this)}isFetching(t,e){const[s]=f(t,e);return s.fetchStatus=\"fetching\",this.queryCache.findAll(s).length}isMutating(t){return this.mutationCache.findAll({...t,fetching:!0}).length}getQueryData(t,e){var s;return null==(s=this.queryCache.find(t,e))?void 0:s.state.data}getQueriesData(t){return this.getQueryCache().findAll(t).map((({queryKey:t,state:e})=>[t,e.data]))}setQueryData(t,e,s){const r=this.queryCache.find(t),i=function(t,e){return\"function\"==typeof t?t(e):t}(e,null==r?void 0:r.state.data);if(void 0===i)return;const n=l(t),a=this.defaultQueryOptions(n);return this.queryCache.build(this,a).setData(i,{...s,manual:!0})}setQueriesData(t,e,s){return K.batch((()=>this.getQueryCache().findAll(t).map((({queryKey:t})=>[t,this.setQueryData(t,e,s)]))))}getQueryState(t,e){var s;return null==(s=this.queryCache.find(t,e))?void 0:s.state}removeQueries(t,e){const[s]=f(t,e),r=this.queryCache;K.batch((()=>{r.findAll(s).forEach((t=>{r.remove(t)}))}))}resetQueries(t,e,s){const[r,i]=f(t,e,s),n=this.queryCache,a={type:\"active\",...r};return K.batch((()=>(n.findAll(r).forEach((t=>{t.reset()})),this.refetchQueries(a,i))))}cancelQueries(t,e,s){const[r,i={}]=f(t,e,s);void 0===i.revert&&(i.revert=!0);const n=K.batch((()=>this.queryCache.findAll(r).map((t=>t.cancel(i)))));return Promise.all(n).then(o).catch(o)}invalidateQueries(t,e,s){const[r,i]=f(t,e,s);return K.batch((()=>{var t,e;if(this.queryCache.findAll(r).forEach((t=>{t.invalidate()})),\"none\"===r.refetchType)return Promise.resolve();const s={...r,type:null!=(t=null!=(e=r.refetchType)?e:r.type)?t:\"active\"};return this.refetchQueries(s,i)}))}refetchQueries(t,e,s){const[r,i]=f(t,e,s),n=K.batch((()=>this.queryCache.findAll(r).filter((t=>!t.isDisabled())).map((t=>{var e;return t.fetch(void 0,{...i,cancelRefetch:null==(e=null==i?void 0:i.cancelRefetch)||e,meta:{refetchPage:r.refetchPage}})}))));let a=Promise.all(n).then(o);return null!=i&&i.throwOnError||(a=a.catch(o)),a}fetchQuery(t,e,s){const r=l(t,e,s),i=this.defaultQueryOptions(r);void 0===i.retry&&(i.retry=!1);const n=this.queryCache.build(this,i);return n.isStaleByTime(i.staleTime)?n.fetch(i):Promise.resolve(n.state.data)}prefetchQuery(t,e,s){return this.fetchQuery(t,e,s).then(o).catch(o)}fetchInfiniteQuery(t,e,s){const r=l(t,e,s);return r.behavior=G(),this.fetchQuery(r)}prefetchInfiniteQuery(t,e,s){return this.fetchInfiniteQuery(t,e,s).then(o).catch(o)}resumePausedMutations(){return this.mutationCache.resumePausedMutations()}getQueryCache(){return this.queryCache}getMutationCache(){return this.mutationCache}getLogger(){return this.logger}getDefaultOptions(){return this.defaultOptions}setDefaultOptions(t){this.defaultOptions=t}setQueryDefaults(t,e){const s=this.queryDefaults.find((e=>b(t)===b(e.queryKey)));s?s.defaultOptions=e:this.queryDefaults.push({queryKey:t,defaultOptions:e})}getQueryDefaults(t){if(!t)return;const e=this.queryDefaults.find((e=>g(t,e.queryKey)));return null==e?void 0:e.defaultOptions}setMutationDefaults(t,e){const s=this.mutationDefaults.find((e=>b(t)===b(e.mutationKey)));s?s.defaultOptions=e:this.mutationDefaults.push({mutationKey:t,defaultOptions:e})}getMutationDefaults(t){if(!t)return;const e=this.mutationDefaults.find((e=>g(t,e.mutationKey)));return null==e?void 0:e.defaultOptions}defaultQueryOptions(t){if(null!=t&&t._defaulted)return t;const e={...this.defaultOptions.queries,...this.getQueryDefaults(null==t?void 0:t.queryKey),...t,_defaulted:!0};return!e.queryHash&&e.queryKey&&(e.queryHash=m(e.queryKey,e)),void 0===e.refetchOnReconnect&&(e.refetchOnReconnect=\"always\"!==e.networkMode),void 0===e.useErrorBoundary&&(e.useErrorBoundary=!!e.suspense),e}defaultMutationOptions(t){return null!=t&&t._defaulted?t:{...this.defaultOptions.mutations,...this.getMutationDefaults(null==t?void 0:t.mutationKey),...t,_defaulted:!0}}clear(){this.queryCache.clear(),this.mutationCache.clear()}},t.QueryClientProvider=({client:t,children:e,context:s,contextSharing:r=!1})=>{i.useEffect((()=>(t.mount(),()=>{t.unmount()})),[t]);const n=ut(s,r);return i.createElement(ot.Provider,{value:!s&&r},i.createElement(n.Provider,{value:t},e))},t.QueryErrorResetBoundary=({children:t})=>{const[e]=i.useState((()=>ft()));return i.createElement(pt.Provider,{value:e},\"function\"==typeof t?t(e):t)},t.QueryObserver=V,t.defaultContext=at,t.dehydrate=function(t,e={}){const s=[],r=[];if(!1!==e.dehydrateMutations){const r=e.shouldDehydrateMutation||rt;t.getMutationCache().getAll().forEach((t=>{r(t)&&s.push(function(t){return{mutationKey:t.options.mutationKey,state:t.state}}(t))}))}if(!1!==e.dehydrateQueries){const s=e.shouldDehydrateQuery||it;t.getQueryCache().getAll().forEach((t=>{s(t)&&r.push(function(t){return{state:t.state,queryKey:t.queryKey,queryHash:t.queryHash}}(t))}))}return{mutations:s,queries:r}},t.focusManager=M,t.hashQueryKey=b,t.hydrate=nt,t.isCancelledError=I,t.isError=function(t){return t instanceof Error},t.notifyManager=K,t.onlineManager=w,t.parseFilterArgs=f,t.parseMutationArgs=d,t.parseMutationFilterArgs=p,t.parseQueryArgs=l,t.useHydrate=bt,t.useInfiniteQuery=function(t,e,s){return mt(l(t,e,s),et)},t.useIsFetching=function(t,e,r){const[n,a={}]=f(t,e,r),o=ct({context:a.context}),u=o.getQueryCache();return s.useSyncExternalStore(i.useCallback((t=>u.subscribe(K.batchCalls(t))),[u]),(()=>o.isFetching(n)),(()=>o.isFetching(n)))},t.useIsMutating=function(t,e,r){const[n,a={}]=p(t,e,r),o=ct({context:a.context}),u=o.getMutationCache();return s.useSyncExternalStore(i.useCallback((t=>u.subscribe(K.batchCalls(t))),[u]),(()=>o.isMutating(n)),(()=>o.isMutating(n)))},t.useIsRestoring=lt,t.useMutation=function(t,e,r){const n=d(t,e,r),a=ct({context:n.context}),[o]=i.useState((()=>new st(a,n)));i.useEffect((()=>{o.setOptions(n)}),[o,n]);const u=s.useSyncExternalStore(i.useCallback((t=>o.subscribe(K.batchCalls(t))),[o]),(()=>o.getCurrentResult()),(()=>o.getCurrentResult())),c=i.useCallback(((t,e)=>{o.mutate(t,e).catch(gt)}),[o]);if(u.error&&vt(o.options.useErrorBoundary,[u.error]))throw u.error;return{...u,mutate:c,mutateAsync:u.mutate}},t.useQueries=function({queries:t,context:e}){const r=ct({context:e}),n=lt(),a=i.useMemo((()=>t.map((t=>{const e=r.defaultQueryOptions(t);return e._optimisticResults=n?\"isRestoring\":\"optimistic\",e}))),[t,r,n]),[o]=i.useState((()=>new tt(r,a))),u=o.getOptimisticResult(a);return s.useSyncExternalStore(i.useCallback((t=>n?()=>{}:o.subscribe(K.batchCalls(t))),[o,n]),(()=>o.getCurrentResult()),(()=>o.getCurrentResult())),i.useEffect((()=>{o.setQueries(a,{listeners:!1})}),[a,o]),u},t.useQuery=function(t,e,s){return mt(l(t,e,s),V)},t.useQueryClient=ct,t.useQueryErrorResetBoundary=yt,Object.defineProperty(t,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=index.production.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/build/umd/index.production.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/shim/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/shim/index.js ***!
  \***********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSwyTkFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS9pbmRleC5qcz9hMzBjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _styles_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/theme */ \"./src/styles/theme.ts\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/umd/index.production.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _contexts_SidebarDrawerContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/SidebarDrawerContext */ \"./src/contexts/SidebarDrawerContext.tsx\");\n/* harmony import */ var _services_mirage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mirage */ \"./src/services/mirage/index.ts\");\n\n\n\n\n\n\n\nif (true) {\n    (0,_services_mirage__WEBPACK_IMPORTED_MODULE_3__.makeServer)();\n}\nvar queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.QueryClient;\nfunction MyApp(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ChakraProvider, {\n            theme: _styles_theme__WEBPACK_IMPORTED_MODULE_1__.theme,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_SidebarDrawerContext__WEBPACK_IMPORTED_MODULE_2__.SidebarDrawerProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, pageProps), void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Yago\\\\Desktop\\\\Coisas\\\\RocketSeat - Ignite\\\\Chapter Four\\\\dashgo\\\\src\\\\pages\\\\_app.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 21\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Yago\\\\Desktop\\\\Coisas\\\\RocketSeat - Ignite\\\\Chapter Four\\\\dashgo\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 19,\n                columnNumber: 17\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Yago\\\\Desktop\\\\Coisas\\\\RocketSeat - Ignite\\\\Chapter Four\\\\dashgo\\\\src\\\\pages\\\\_app.tsx\",\n            lineNumber: 18,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Yago\\\\Desktop\\\\Coisas\\\\RocketSeat - Ignite\\\\Chapter Four\\\\dashgo\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 17,\n        columnNumber: 9\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOztBQUNpRDtBQUNWO0FBRWlDO0FBQ0E7QUFDekI7QUFFL0MsSUFBSU0sSUFBc0MsRUFBRTtJQUN4Q0QsNERBQVUsRUFBRTtDQUNmO0FBRUQsSUFBTUUsV0FBVyxHQUFHLElBQUlKLDhEQUFXO0FBRW5DLFNBQVNLLEtBQUssQ0FBQyxLQUFrQyxFQUFFO1FBQWxDQyxTQUFTLEdBQVgsS0FBa0MsQ0FBaENBLFNBQVMsRUFBRUMsU0FBUyxHQUF0QixLQUFrQyxDQUFyQkEsU0FBUztJQUNqQyxxQkFDSSw4REFBQ1Isc0VBQW1CO1FBQUNTLE1BQU0sRUFBRUosV0FBVztrQkFDcEMsNEVBQUNQLDREQUFjO1lBQUNDLEtBQUssRUFBRUEsZ0RBQUs7c0JBQ3hCLDRFQUFDRyxpRkFBcUI7MEJBQ2xCLDRFQUFDSyxTQUFTLHFGQUFLQyxTQUFTOzs7O3dCQUFJOzs7OztvQkFDUDs7Ozs7Z0JBQ1o7Ozs7O1lBQ0MsQ0FFekI7Q0FDSjtBQVhRRixLQUFBQSxLQUFLO0FBYWQsK0RBQWVBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL19hcHAudHN4P2Y5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcclxuaW1wb3J0IHsgQ2hha3JhUHJvdmlkZXIgfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0J1xyXG5pbXBvcnQgeyB0aGVtZSB9IGZyb20gJy4uL3N0eWxlcy90aGVtZSdcclxuXHJcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50UHJvdmlkZXIsIFF1ZXJ5Q2xpZW50IH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5J1xyXG5pbXBvcnQgeyBTaWRlYmFyRHJhd2VyUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9TaWRlYmFyRHJhd2VyQ29udGV4dCdcclxuaW1wb3J0IHsgbWFrZVNlcnZlciB9IGZyb20gJy4uL3NlcnZpY2VzL21pcmFnZSdcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xyXG4gICAgbWFrZVNlcnZlcigpXHJcbn1cclxuXHJcbmNvbnN0IHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50XHJcblxyXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxyXG4gICAgICAgICAgICA8Q2hha3JhUHJvdmlkZXIgdGhlbWU9e3RoZW1lfT5cclxuICAgICAgICAgICAgICAgIDxTaWRlYmFyRHJhd2VyUHJvdmlkZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9TaWRlYmFyRHJhd2VyUHJvdmlkZXIgPlxyXG4gICAgICAgICAgICA8L0NoYWtyYVByb3ZpZGVyPlxyXG4gICAgICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cclxuXHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE15QXBwXHJcbiJdLCJuYW1lcyI6WyJDaGFrcmFQcm92aWRlciIsInRoZW1lIiwiUXVlcnlDbGllbnRQcm92aWRlciIsIlF1ZXJ5Q2xpZW50IiwiU2lkZWJhckRyYXdlclByb3ZpZGVyIiwibWFrZVNlcnZlciIsInByb2Nlc3MiLCJxdWVyeUNsaWVudCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n"));

/***/ })

});